plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.diffplug.spotless' version '6.25.0'
}

group = 'com.imaging'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation("io.jsonwebtoken:jjwt-api:0.12.3")
    implementation("io.jsonwebtoken:jjwt-impl:0.12.3")
    implementation("io.jsonwebtoken:jjwt-jackson:0.12.3")
    runtimeOnly 'com.mysql:mysql-connector-j:8.0.33'
}

spotless {
    java {
        target 'src/**/*.java'
        googleJavaFormat('1.17.0').aosp()
        removeUnusedImports()
//        importOrderFile 'config/importorder.txt'
    }

    format 'misc', {
        target '**/*.gradle', '**/*.md', '**/*.properties', '**/*.yml'
        indentWithSpaces 4
        trimTrailingWhitespace()
        endWithNewline()
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
